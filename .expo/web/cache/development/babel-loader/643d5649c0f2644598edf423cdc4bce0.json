{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\dictionary1\\\\screens\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header } from 'react-native-elements';\nimport dictionary from \"../database\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this);\n\n    _this.getWord = function (text) {\n      var text = text.toLowerCase();\n\n      try {\n        var word = dictionary[text][\"word\"];\n        var lexicalCategory = dictionary[text][\"lexicalCategory\"];\n        var definition = dictionary[\"definition\"];\n\n        _this.setState({\n          \"word\": word,\n          \"lexicalCategory\": lexicalCategory,\n          \"definition\": definition\n        });\n      } catch (err) {\n        alert(\"Sorry This word is not available for now\");\n\n        _this.setState({\n          'text': '',\n          'isSearchPressed': false\n        });\n      }\n    };\n\n    _this.state = {\n      text: '',\n      isSearchPressed: false,\n      isLoading: false,\n      word: \"Loading...\",\n      lexicalCategory: '',\n      definition: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          borderWidth: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        backgroundColor: 'purple',\n        centerComponent: {\n          text: 'Pocket Dictionary',\n          style: {\n            color: '#fff',\n            fontSize: 20\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.inputBoxContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            text: text,\n            isSearchPressed: false,\n            word: \"Loading...\",\n            lexicalCategory: '',\n            examples: [],\n            defination: \"\"\n          });\n        },\n        value: this.state.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.setState({\n            isSearchPressed: true\n          });\n\n          _this2.getWord(_this2.state.text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.searchText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, \"Search\"))), React.createElement(View, {\n        style: styles.outputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, this.state.isSearchPressed && this.state.word === \"Loading...\" ? this.state.word : \"\"), this.state.word !== \"Loading...\" ? React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.detailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, \" Word :\", \" \", \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, this.state.word)), React.createElement(View, {\n        style: styles.detailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, \" Type :\", \" \", \"  \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, this.state.word)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, \" Definition :\", \" \", \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, this.state.word))) : null));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  inputBoxContainer: {\n    flex: 0.3,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputBox: {\n    width: '80%',\n    alignSelf: 'center',\n    height: 40,\n    textAlign: 'center',\n    borderWidth: 4\n  },\n  searchButton: {\n    width: '40%',\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10\n  },\n  searchText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  outputContainer: {\n    flex: 0.7,\n    alignItems: 'center'\n  },\n  detailsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  detailsTitle: {\n    color: 'orange',\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/HP/Downloads/dictionary1/screens/HomeScreen.js"],"names":["React","Component","Header","dictionary","HomeScreen","getWord","text","toLowerCase","word","lexicalCategory","definition","setState","err","alert","state","isSearchPressed","isLoading","flex","borderWidth","style","color","fontSize","styles","inputBoxContainer","inputBox","examples","defination","searchButton","searchText","outputContainer","justifyContent","marginLeft","detailsContainer","detailsTitle","flexDirection","flexWrap","StyleSheet","create","alignItems","width","alignSelf","height","textAlign","margin","borderRadius","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity } from 'react-native';\nimport { Header } from 'react-native-elements';\nimport dictionary from '../database';\nexport default class HomeScreen extends Component{\n  constructor() {\n    super();\n    this.state = {\n      text: '',\n      isSearchPressed: false,\n      isLoading: false,\n      word  : \"Loading...\",\n      lexicalCategory :'',\n      definition : \"\"\n    };\n  }\n\n  getWord=(text)=>{\n    var text = text.toLowerCase()\n    try{\n      var word = dictionary[text][\"word\"]\n\n      var lexicalCategory = dictionary[text][\"lexicalCategory\"]\n\n      var definition = dictionary[\"definition\"]\n      \n      this.setState({\n        \"word\" : word,\n        \"lexicalCategory\" : lexicalCategory,\n        \"definition\" : definition\n      })\n    }\n    catch(err){\n      alert(\"Sorry This word is not available for now\")\n      this.setState({\n        'text':'',\n        'isSearchPressed':false\n      })\n    }\n  }\n\n  render(){\n    return(\n      <View style={{flex:1, borderWidth:2}}>\n        <Header\n          backgroundColor={'purple'}\n          centerComponent={{\n            text: 'Pocket Dictionary',\n            style: { color: '#fff', fontSize: 20 },\n          }}\n        />\n        <View style={styles.inputBoxContainer}>\n          <TextInput\n            style={styles.inputBox}\n            onChangeText={text => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word  : \"Loading...\",\n                lexicalCategory :'',\n                examples : [],\n                defination : \"\"\n              });\n            }}\n            value={this.state.text}\n          />\n\n          <TouchableOpacity\n            style={styles.searchButton}\n            onPress={() => {\n              this.setState({ isSearchPressed: true });\n              this.getWord(this.state.text)\n            }}>\n            <Text style={styles.searchText}>Search</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.outputContainer}>\n          <Text style={{fontSize:20}}>\n            {\n              this.state.isSearchPressed && this.state.word === \"Loading...\"\n              ? this.state.word\n              : \"\"\n            }\n          </Text>\n            {\n              this.state.word !== \"Loading...\" ?\n              (\n                <View style={{justifyContent:'center', marginLeft:10 }}>\n                  <View style={styles.detailsContainer}>\n                    <Text style={styles.detailsTitle}> Word :{\" \"} </Text>\n                    <Text style={{fontSize:18 }}>\n                      {/*Display the word here*/}\n                      {this.state.word}\n                    </Text>\n                  </View>\n                  <View style={styles.detailsContainer}>\n                    <Text style={styles.detailsTitle}> Type :{\" \"}  </Text>\n                    <Text style={{fontSize:18}}>\n                      {/*Display the category here*/}\n                      {this.state.word}\n                    </Text>\n                  </View>\n                  <View style={{flexDirection:'row',flexWrap: 'wrap'}}>\n                    <Text style={styles.detailsTitle}> Definition :{\" \"} </Text>\n                    <Text style={{ fontSize:18}}>\n                    {/*Display the definition here*/}\n                      {this.state.word}\n                    </Text>\n                  </View>\n                </View>\n              )\n              :null\n            }\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputBoxContainer: {\n    flex:0.3,\n    alignItems:'center',\n    justifyContent:'center'\n  },\n  inputBox: {\n    width: '80%',\n    alignSelf: 'center',\n    height: 40,\n    textAlign: 'center',\n    borderWidth: 4,\n  },\n  searchButton: {\n    width: '40%',\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n  },\n  searchText:{\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  outputContainer:{\n    flex:0.7,\n    alignItems:'center'\n  },\n  detailsContainer:{\n    flexDirection:'row',\n    alignItems:'center'\n  },\n  detailsTitle:{\n    color:'orange',\n    fontSize:20,\n    fontWeight:'bold'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}